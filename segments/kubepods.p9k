# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - Anaconda
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

setopt localoptions extended_glob

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #                                                        ⎈          ⎈         ⎈         ⎈         ⎈
  p9k::register_segment "KUBECONTEXT" "" "blue" "white" $'\u2388'  $'\u2388'  $'\u2388'  $'\u2388'  $'\u2388'

  p9k::set_default P9K_KUBEPODS_NAMESPACES ""
}

################################################################
# @description
#   Display the Kubernetes Pods
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
prompt_kubepods() {
  local info
  local namespace
  local ready
  setopt xtrace
#   local rawData=$(command kubectl get pods --all-namespaces)
  local rawData=$(kubectl get pods --all-namespaces)
  for data in "${(f@)rawData}"; do
    [[ "$data" =~ ^([^ ]+) ]] && namespace="${MATCH}"
    [[ ! "${namespace}" =~ "(${(j:|:)P9K_KUBEPODS_NAMESPACES:-.*)})" ]] && continue
    [[ "$data" =~ ([0-9]+)/([0-9]+) ]] && ready="${MATCH}"

    info+="${namespace}: ${ready}"
  done
  unsetopt xtrace

  p9k::prepare_segment "$0" "" $1 "$2" $3 "${info}"
}
