# vim:ft=zsh ts=2 sw=2 sts=2 et fenc=utf-8
################################################################
# @title powerlevel9k Segment - Anaconda
# @source [powerlevel9k](https://github.com/bhilburn/powerlevel9k)
##

setopt localoptions

(){
  # Set the right locale to protect special characters
  local LC_ALL="" LC_CTYPE="en_US.UTF-8"
  ################################################################
  # Register segment
  # Parameters:
  #   segment_name  context  background  foreground  Generic  Flat/Awesome-Patched  Awesome-FontConfig  Awesome-Mapped-FontConfig  NerdFont
  #                                                        ⎈          ⎈         ⎈         ⎈         ⎈
  p9k::register_segment "KUBECONTEXT" "" "blue" "white" $'\u2388'  $'\u2388'  $'\u2388'  $'\u2388'  $'\u2388'

  p9k::defined P9K_KUBEPODS_NAMESPACES || P9K_KUBEPODS_NAMESPACES=()
}

################################################################
# @description
#   Display the Kubernetes Pods
##
# @args
#   $1 string Alignment - left | right
#   $2 integer Segment index
#   $3 boolean Whether the segment should be joined
##
prompt_kubepods() {
  local -Ah namespaces
  local rawData=$(command kubectl get pods --all-namespaces)
  local headline=1
  for data in "${(f@)rawData}"; do
    # Skip headline
    [[ $headline == 1 ]] && headline=0 && continue
    # Parse and aggregate data
    if [[ "${data}" =~ ^([^ ]+).*([0-9]+)/([0-9]+) ]]; then
      local current_namespace="${match[1]}"
      local pods_ready="${match[2]}"
      local pods_overall="${match[3]}"

      local ready=${namespaces[${current_namespace}_READY]:0}
      namespaces[${current_namespace}_READY]=$(( pods_ready + ready ))
      local overall=${namespaces[${current_namespace}_OVERALL]:0}
      namespaces[${current_namespace}_OVERALL]=$(( pods_overall + overall ))
    fi
  done

  # Build up info string
  local -ah info
  for desired_namespace in "${(f@)P9K_KUBEPODS_NAMESPACES}"; do
    local ready="${namespaces[${desired_namespace}_READY]}"
    local overall="${namespaces[${desired_namespace}_OVERALL]}"
    info+=("${desired_namespace}: ${ready:-0}/${overall:-0}")
  done
  p9k::prepare_segment "$0" "" $1 "$2" $3 "${(j: :)info}"
}
